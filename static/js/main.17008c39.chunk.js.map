{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","key","handleKeyup","setState","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAkB,CAChBC,IAAK,IAFT,EAaEC,YAAc,YAA6B,IAA1BD,EAAyB,EAAzBA,IACf,EAAKE,SAAS,CAAEF,SAdpB,uDAKE,WACEG,SAASC,iBAAiB,QAASC,KAAKJ,eAN5C,kCASE,WACEE,SAASG,oBAAoB,QAASD,KAAKJ,eAV/C,oBAiBE,WACE,IAAQD,EAAQK,KAAKN,MAAbC,IAER,OACE,qBAAKO,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGP,EAAG,mCAC4BA,EAD5B,KAEA,kCAzBd,GAAyBQ,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.17008c39.chunk.js","sourcesContent":["import React from 'react';\n\ntype AppState = {\n  key: string;\n};\n\nexport class App extends React.Component {\n  state: AppState = {\n    key: '',\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', this.handleKeyup);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.handleKeyup);\n  }\n\n  handleKeyup = ({ key }: KeyboardEvent) => {\n    this.setState({ key });\n  };\n\n  render() {\n    const { key } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {key\n            ? `The last pressed key is [${key}]`\n            : 'Nothing was pressed yet'}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}